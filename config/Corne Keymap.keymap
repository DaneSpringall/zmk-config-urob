/*
 * Copyright (c) 2020 The ZMK Contributors
 * 
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        sel_left: sel_left {
            compatible = "zmk,behavior-mod-morph";
            label = "Select_Left";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp LA(LS(LEFT))>;
            mods = <(MOD_LALT)>;
        };
    };
};

/ {
    behaviors {
        sel_right: sel_right {
            compatible = "zmk,behavior-mod-morph";
            label = "Select_Right";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp LA(LS(RIGHT))>;
            mods = <(MOD_LALT)>;
        };
    };
};

/ {
    behaviors {
        sel_down: sel_down {
            compatible = "zmk,behavior-mod-morph";
            label = "Select_DOWN";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp LA(LS(DOWN))>;
            mods = <(MOD_LALT)>;
        };
    };
};

/ {
    behaviors {
        sel_up: sel_up {
            compatible = "zmk,behavior-mod-morph";
            label = "Select_Up";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp LA(LS(UP))>;
            mods = <(MOD_LALT)>;
        };
    };
};
/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  |  ;  | BSPC |
            // | CTRL |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  |  '   |
            // | ALT |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | LWR | SPC | SHFT |   | ENT | CMD  | RSE |

            bindings = <
  &kp TAB  &kp Q  &kp W  &kp F      &kp P      &kp G                   &kp J     &kp L      &kp U    &kp Y  &kp SEMI  &kp LGUI
&kp LCTRL  &kp A  &kp R  &kp S      &kp T      &kp D                   &sel_left     &sel_down      &sel_up    &sel_right     &kp O   &kp SQT
 &kp LALT  &kp Z  &kp X  &kp C      &kp V      &kp B                   &kp K     &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &mo 1  &kp SPACE  &kp LSHFT    &mt LC(LS(LALT)) RET  &kp BSPC      &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  BTCLR |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | RALT |
            // | BT1 |     | VDN | VUP  | PP  |     |   | LFT | DWN |  UP | RGT |     |      |
            // | BT2 |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     | GUI | SPC |   | ENT | Word BKSP |     |

            bindings = <
   &bt BT_CLR        &kp N1        &kp N2        &kp N3    &kp N4      &kp N5      &kp N6    &kp N7  &kp N8     &kp N9  &kp N0  &kp RALT
&bt BT_SEL 0 &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP  &kp K_NEXT    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans    &trans
 &trans    &trans    &kp LG(X)  &kp LG(C)  &kp LG(V)      &kp LG(K)      &trans    &trans  &trans     &trans  &trans    &trans
                                              &trans  &kp LGUI   &kp SPACE     &kp RET  &kp LA(BSPC)  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | RALT |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    |     | GUI | SPC |   | ENT | BKSP|     |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp RALT
&kp LCTRL    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                               &trans  &kp LGUI  &kp SPACE      &kp RET   &kp BKSP           &trans
            >;
        };
    };
};
